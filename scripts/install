#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

set -eu


#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
ynh_admin=$YNH_APP_ARG_ADMIN

app=$YNH_APP_INSTANCE_NAME
unix_user=$app
dbname=$app
dbuser=$app


#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

ynh_user_exists "$ynh_admin" || ynh_die "The chosen admin user does not exist"

# '/ghost' is refused by the application itself. This is used as the route to the admin section
if [[ "$path" = "/ghost" ]]; then
    ynh_die "Error : the path cannot be '/ghost', please choose another location"
fi


app_url="${domain}${path}"
sudo yunohost app checkurl "$app_url" -a "$app" \
    || ynh_die "Path not available: $app_url"



#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set "$app" admin "$ynh_admin"
ynh_app_setting_set "$app" app "$app"
ynh_app_setting_set "$app" domain "$domain"


#=================================================
# INSTALL DEPENDENCIES
#=================================================

echo "Install dependencies..."
ynh_package_update

#!/bin/bash

if $(ynh_package_is_installed "nodejs"); then
  nodejs_version=$(ynh_package_version "nodejs")
  if [ "${nodejs_version:0:1}" -eq 4 ] && [ "${nodejs_version:2:1}" -ge 2 ]; then
    echo "Nodejs installed with correct version"
  fi
else
  [ ! $(ynh_package_is_installed "nodered")] || ynh_package_remove "nodered"
  [ ! $(ynh_package_is_installed "nodejs")] || ynh_package_remove "nodejs"
  [ ! $(ynh_package_is_installed "nodejs-legacy")] || ynh_package_remove "nodejs-legacy"
  [ ! $(ynh_package_is_installed "npm")] || ynh_package_remove "npm"

  sudo curl -sL https://deb.nodesource.com/setup_4.x | sudo bash -
  sudo apt-get install -y nodejs
fi


#=================================================
# INSTALL GHOST
#=================================================

echo "Downloading Ghost..."
ghost_download_url="https://github.com/TryGhost/Ghost/releases/download/0.11.8/Ghost-0.11.8.zip"
temp_dir=$(mktemp -d)
sudo wget -O "$temp_dir/ghost.zip" "$ghost_download_url"

echo "Deploying source files..."
unzip "$temp_dir/ghost.zip" -d "$temp_dir/ghost"
app_path="/var/www/$app"
sudo mkdir -p "$app_path"
ynh_system_user_exists "$unix_user" || sudo useradd -d "$app_path" "$unix_user"

sudo cp -R "$temp_dir/ghost/." "$app_path"
sudo chown -R "$unix_user": "$app_path"

echo "Installing Ghost with NPM..."
sudo su --shell /bin/bash --command "cd $app_path && npm install --production --unsafe-perm" "$unix_user"

echo "Cleaning up install tree..."
sudo rm -rf "$app_path/.npm"
find $app_path -type d | grep "test$" | xargs sudo rm -rf
find $app_path -type d | grep "tests$" | xargs sudo rm -rf
sudo rm -rf "$app_path/node_modules/sqlite3/build"
sudo rm -rf "$app_path/tmp"

echo "Setting up permissions"
sudo chown -R "$unix_user": "$app_path"


echo "Setting up database..."

dbpass=$(ynh_string_random)

ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"

echo "Deploying configuration..."
sed -i "s@YNH_URL@$app_url@g" ../conf/config.js
sed -i "s@YNH_DBNAME@$dbname@g" ../conf/config.js
sed -i "s@YNH_DBUSER@$dbuser@g" ../conf/config.js
sed -i "s@YNH_DBPWD@$dbpass@g" ../conf/config.js
sudo cp ../conf/config.js "$app_path"
sudo chown "$unix_user": "$app_path/config.js"
sudo chmod 644 "$app_path/config.js"

echo "Setting up init script..."
logfile="/var/log/$app.log"
sudo touch "$logfile"
sudo chown "$unix_user": "$logfile"
sed -i "s@YNH_FINALPATH@$app_path@g" ../conf/init-script
sed -i "s@YNH_LOGFILE@$logfile@g" ../conf/init-script
sed -i "s@YNH_GHOSTUSER@$unix_user@g" ../conf/init-script
sed -i "s@YNH_GHOSTAPP@$app@g" ../conf/init-script

sudo cp ../conf/init-script /etc/init.d/"$app"
sudo chmod +x /etc/init.d/"$app"
sudo update-rc.d "$app" defaults
sudo service "$app" start
sudo yunohost service add "$app" -l $logfile

echo "Setting up logrotate configuration..."
sed -i "s@YNH_LOGFILE@$logfile@g" ../conf/logrotate
sudo cp ../conf/logrotate /etc/logrotate.d/"$app"

echo "Nginx configuration..."
sed -i "s@YNH_LOCATION@$path@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/"$app".conf


echo "Reloading Nginx..."

# Allow acces to the blog for everyone
ynh_app_setting_set "$app" skipped_uris "/"


sudo service nginx reload

echo "Success ! You can go to http://${domain}${path}/ghost to configure your ghost admin account"
